// 1.
let rec inserisci elem pos l = 
    if pos = 0 then elem :: l
    else match l with
           []->elem::[]
         | [x]-> x::elem::[]
         | x::xs->x::inserisci elem (pos-1) xs



// 2.


let rec girare l=match l with
                    []->[]
                   |[x]->[x]
                   |x::xs->girare(xs)@[x]

let palindroma l= if (girare l)=l then true
                  else false

// 3.
let rec ordinata l= match l with
                            []->[]
                          | [x]->[x]
                          | x::y::ys-> if x>y then y::ordinata (x::ys)
                                       elif x=y then ordinata (y::ys)
                                       else x::ordinata (y::ys)

let rec cor l= match l with
                []->true
               |[x]->true
               |x::y::ys-> if x<y then cor (y::ys)
                           else false

let rec cor_ordinata l= if cor l = true then l
                        else cor_ordinata(ordinata l)

let  unione_ordinata l1 l2 = cor_ordinata (l1@l2)
